type OfficeAssistant {
    id: ID!
    name: String!
    email: String!
    messages: [Message!]
}

type Message implements SearchableMessage {
    id: ID!
    createdDateTime: DateTime!
    prettyCreateDateTime: String
    title: String!
    message: String!
    officeSender: OfficeAssistant
    patient: Patient
    messageResponse: [MessageResponse!]
}

#only messages sent to office assistants can receive a solution
# a solution represents a response to a message that a patient sends to the office
type Solution implements SearchableMessage {
    id: ID!
    createdDateTime: DateTime!
    prettyCreateDateTime: String
    title: String!
    content: String!
    author: OfficeAssistant!
}

type MessageResponse {
    message: Message
}

interface SearchableMessage {
    id: ID!
    createdDateTime: DateTime!
    prettyCreateDateTime: String
}

input MessageCreateInput {
    title: String!
    content: String!
}

input MessageResponseInput {
    messageID: ID!
    content: String!
}


