type Patient {
    patientID: ID
    name: String
    email: String
    medicalRecordNumber: Int
    DOB: String
    address: Address
    gender: String
    contactNumber: String
    primary: PrimaryCareDoctor
    preferredPharmacy: Pharmacy
    message: [Enquiry!]
    messageCreatedDateTime: DateTime!
    prettyCreateDateTime: String
    dateProfileCreated: Date
}

type PrimaryCareDoctor {
    id: ID!
    name: String
    locations: [Address!]!
    emailAddress: String
}

#for getting patient by pcp
input PatientsByPrimaryCareDoctorFilter {
    name: String
    emailAddress: String
}

type SpecialtyDoctor {
    id: ID!
    name: String!
    specialty: Specialty!
    contactNumber: String!
}

type Specialty {
    specialty: String!
}

type Address {
    street: String!
    city: String!
    zipCode: String
    state: String!
}

type Pharmacy {
    id: ID!
    name: String!
    contactNumber: String!
    zipCode: String
    pharmacyWebsite: Url
}

input PharmacyInput {
    zipCode: String
}

input PatientCreateInput {
    name: String
    DOB: String
    email: String
    address: String!
    gender: String
    contactNumber: String
    primary: String
    preferredPharmacy: String
    password: String
}

input PatientLoginInput {
    name: String
    email: String
    password: String

}

input PatientDeactivateInput {
    patientMRN: Int!
    name: String
    isActive: Boolean!
}

type UserAuthToken {
    authToken: String
    expiryTime: String
}

## for patient create/login
type PatientResponse {
    patient: Patient
    authToken: UserAuthToken
}

type PatientDeactivateResponse {
    isActive: Boolean

}
